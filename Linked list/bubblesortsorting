#include <bits/stdc++.h>
using namespace std;

struct node {
    int data;
    node* next;
    node* prev;
    node(int val) {
        data = val;
        next = nullptr;
        prev = nullptr;
    }
};

void insert(node*& head, node*& tail, int val) {
    node* newNode = new node(val);
    if (!head) {
        head = tail = newNode;
        return;
    }
    tail->next = newNode;
    newNode->prev = tail;
    tail = newNode;
}

void printDLL(node* head) {
    while (head) {
        cout << head->data;
        if (head->next) cout << " â†” ";
        head = head->next;
    }
    cout << endl;
}
void swapNodes(node*& head, node* x, node* y) {
    node* px = x->prev;
    node* ny = y->next;

    if (px) px->next = y;
    else head = y;

    if (ny) ny->prev = x;

    y->prev = px;
    y->next = x;
    x->prev = y;
    x->next = ny;
}

node* bubbleSortDLL(node* head) {
    if (!head) return head;
    bool swapped;
    do {
        swapped = false;
        node* temp = head;
        while (temp->next) {
            if (temp->data > temp->next->data) {
                swapNodes(head, temp, temp->next);
                swapped = true;
            } else {
                temp = temp->next;
            }
        }
    } while (swapped);
    return head;
}

void solve(int tc) {
    int n;
    cin >> n;
    node* head = nullptr;
    node* tail = nullptr;
    for (int i = 0; i < n; i++) {
        int val;
        cin >> val;
        insert(head, tail, val);
    }
    
    head = bubbleSortDLL(head);

    cout << "After Sorting: ";
    printDLL(head);
}

signed main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int tc, tt = 1;
    cin >> tt;
    for (tc = 1; tc <= tt; tc++) {
        solve(tc);
        cout << endl;
    }
    return 0;
}
